{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/maxhaggkvist/Documents/cross platform apps/crossplatform_finalApp/mobile_layer/components/flatlistPublicProjectItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { globalStyles } from \"../styles/global\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Loading from \"../components/loading\";\n\nvar FlatlistPublicProjectItem = function FlatlistPublicProjectItem(props) {\n  console.log(\"user passed from props: \" + props.user);\n  console.log('project title passed from props ' + JSON.stringify(props.project.title));\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newComment = _useState6[0],\n      setNewComment = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loadComments = _useState8[0],\n      setLoadComments = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      listComments = _useState10[0],\n      setListComments = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      emptyComments = _useState12[0],\n      setEmptyComments = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      load = _useState14[0],\n      setLoad = _useState14[1];\n\n  var _useState15 = useState(props.user),\n      _useState16 = _slicedToArray(_useState15, 2),\n      user = _useState16[0],\n      setUser = _useState16[1];\n\n  var toggleComments = function toggleComments(id) {\n    console.log('toggle comments');\n    setLoadComments(true);\n    setTimeout(function () {\n      if (comments) {\n        setComments(false);\n      } else {\n        setComments(true);\n      }\n\n      setLoadComments(false);\n    }, 1200);\n  };\n\n  var addComment = function addComment(id) {\n    setLoad(true);\n    console.log(\"adding comment to project: \" + id);\n\n    function comment() {\n      var commentResult, jsonResult;\n      return _regeneratorRuntime.async(function comment$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.2:3000/post-comment\", {\n                method: \"GET\",\n                headers: {\n                  user: user,\n                  id: id,\n                  comment: newComment\n                }\n              }));\n\n            case 3:\n              commentResult = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(commentResult.json());\n\n            case 6:\n              jsonResult = _context.sent;\n              console.log(jsonResult);\n\n              if (jsonResult.success) {\n                console.log(\"result: \" + JSON.stringify(jsonResult));\n                setLoad(false);\n                setNewComment('');\n              } else {\n                console.log(JSON.stringify(jsonResult));\n                setLoad(false);\n                setNewComment('');\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    }\n\n    try {\n      if (newComment.length > 0) {\n        comment();\n      } else {\n        setLoad(false);\n      }\n    } catch (error) {\n      console.error(error);\n      setLoad(false);\n    }\n  };\n\n  useEffect(function () {\n    console.log('modal toggled');\n    setNewComment('');\n    setLoad(false);\n\n    function getComments() {\n      var commentList, projectComments, jsonComment;\n      return _regeneratorRuntime.async(function getComments$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commentList = [];\n              console.log(\"fetching comments for project: \" + props.project.id);\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.2:3000/project-comments\", {\n                method: \"GET\",\n                headers: {\n                  user: props.user,\n                  id: props.project.id\n                }\n              }));\n\n            case 4:\n              projectComments = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(projectComments.json());\n\n            case 7:\n              jsonComment = _context2.sent;\n              jsonComment.forEach(function (commentFound) {\n                commentList.push(commentFound.comment);\n              });\n              setListComments(commentList);\n\n              if (commentList.length > 0) {\n                setEmptyComments(true);\n              } else {\n                setEmptyComments(false);\n              }\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    try {\n      getComments();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [modalVisible]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"add comment\"), load ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }) : React.createElement(TextInput, {\n    style: styles.modalTextInput,\n    placeholder: \"add comment.. \",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(val) {\n      return setNewComment(val);\n    },\n    value: newComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 47\n    }\n  }), React.createElement(View, {\n    style: styles.modalButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.modalButton), {}, {\n      backgroundColor: \"green\"\n    }),\n    onPress: function onPress() {\n      addComment(props.project.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, \"comment\")), React.createElement(TouchableOpacity, {\n    style: _objectSpread(_objectSpread({}, styles.modalButton), {}, {\n      backgroundColor: \"red\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, \"cancel\")))))), React.createElement(View, {\n    style: globalStyles.projectCardHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: globalStyles.projectTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, props.project.title)), React.createElement(View, {\n    style: globalStyles.projectCardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, comments ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }, emptyComments ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 42\n    }\n  }, listComments && listComments.map(function (comment, index) {\n    return React.createElement(View, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, comment.comment), React.createElement(Text, {\n      style: globalStyles.smallText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, comment.createdAt));\n  })) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 31\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, \"no comments on this project\"))) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 31\n    }\n  }, props.project.body))), React.createElement(View, {\n    style: globalStyles.projectIconRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: globalStyles.projectIcon,\n    name: \"comment-plus-outline\",\n    size: 24,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: globalStyles.projectIconText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \" comment \"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleComments(props.project.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, loadComments ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: globalStyles.projectIcon,\n    name: \"comment-processing-outline\",\n    size: 24,\n    color: \"gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  })) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 35\n    }\n  }, comments ? React.createElement(MaterialCommunityIcons, {\n    style: globalStyles.projectIcon,\n    name: \"comment-remove\",\n    size: 24,\n    color: \"gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 45\n    }\n  }) : React.createElement(MaterialCommunityIcons, {\n    style: globalStyles.projectIcon,\n    name: \"comment-text\",\n    size: 24,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 39\n    }\n  }))), React.createElement(Text, {\n    style: globalStyles.projectIconText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, \" comments \"))));\n};\n\nexport default FlatlistPublicProjectItem;\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    borderColor: 'coral',\n    borderWidth: 1,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    minWidth: 250\n  },\n  modalButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 10,\n    marginVertical: 5,\n    padding: 8,\n    minWidth: 180\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginVertical: 16,\n    textAlign: \"center\"\n  },\n  modalButtonContainer: {\n    marginTop: 90\n  },\n  modalTextInput: {\n    marginVertical: 10\n  }\n});","map":{"version":3,"sources":["/Users/maxhaggkvist/Documents/cross platform apps/crossplatform_finalApp/mobile_layer/components/flatlistPublicProjectItem.js"],"names":["React","useState","useEffect","globalStyles","MaterialCommunityIcons","Loading","FlatlistPublicProjectItem","props","console","log","user","JSON","stringify","project","title","comments","setComments","modalVisible","setModalVisible","newComment","setNewComment","loadComments","setLoadComments","listComments","setListComments","emptyComments","setEmptyComments","load","setLoad","setUser","toggleComments","id","setTimeout","addComment","comment","fetch","method","headers","commentResult","json","jsonResult","success","length","error","getComments","commentList","projectComments","jsonComment","forEach","commentFound","push","Alert","alert","styles","centeredView","modalView","modalText","modalTextInput","val","modalButtonContainer","modalButton","backgroundColor","textStyle","projectCardHeader","projectTitle","projectCardContent","map","index","smallText","createdAt","body","projectIconRow","projectIcon","projectIconText","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","borderRadius","borderColor","borderWidth","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","minWidth","marginVertical","padding","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableOpacity,\n    ActivityIndicator,\n    Modal,\n    TextInput\n} from \"react-native\";\nimport { globalStyles } from \"../styles/global\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Loading from '../components/loading';\n\nconst FlatlistPublicProjectItem = (props) => {\n    console.log(\"user passed from props: \" + props.user);\n    console.log('project title passed from props ' + JSON.stringify(props.project.title));\n    const [comments, setComments] = useState(false);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [newComment, setNewComment] = useState();\n    const [loadComments, setLoadComments] = useState(false);\n    const [listComments, setListComments] = useState();\n    const [emptyComments, setEmptyComments] = useState();\n    const [load, setLoad] = useState(false);\n    const [user, setUser] = useState(props.user);\n\n    const toggleComments = (id) => {\n        console.log('toggle comments');\n        setLoadComments(true);\n        setTimeout(() => {\n            if (comments) {\n                setComments(false);\n            }\n            else {\n                setComments(true);\n            }\n            setLoadComments(false);\n        }, 1200);\n    }\n\n    const addComment = (id) => {\n        setLoad(true);\n        console.log(\"adding comment to project: \" + id);\n\n        async function comment() {\n            try {\n                const commentResult = await fetch(\n                    \"http://192.168.0.2:3000/post-comment\",\n                    {\n                        method: \"GET\",\n                        headers: {\n                            user: user,\n                            id: id,\n                            comment: newComment,\n                        },\n                    }\n                );\n                const jsonResult = await commentResult.json();\n                console.log(jsonResult);\n                if (jsonResult.success) {\n                    console.log(\"result: \" + JSON.stringify(jsonResult));\n                    setLoad(false);\n                    setNewComment('');\n                }\n                else {\n                    console.log(JSON.stringify(jsonResult));\n                    setLoad(false);\n                    setNewComment('');\n                }\n               \n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        try {\n            if (newComment.length > 0) {\n                comment();\n            }\n            else {\n                setLoad(false);\n            }\n        } catch (error) {\n            console.error(error);\n            setLoad(false);\n        }\n    }\n\n    useEffect(() => {\n        console.log('modal toggled');\n        setNewComment('');\n        setLoad(false);\n\n        async function getComments() {\n            const commentList = [];\n            console.log(\"fetching comments for project: \" + props.project.id);\n            const projectComments = await fetch(\n                \"http://192.168.0.2:3000/project-comments\",\n                {\n                    method: \"GET\",\n                    headers: {\n                        user: props.user,\n                        id: props.project.id,\n                    },\n                }\n            );\n\n            const jsonComment = await projectComments.json();\n            jsonComment.forEach((commentFound) => {\n                commentList.push(commentFound.comment);\n            });\n\n            setListComments(commentList);\n            if (commentList.length > 0) {\n                setEmptyComments(true);\n            }\n            else {\n                setEmptyComments(false);\n            }\n        }\n\n        try {\n            getComments();\n        } catch (error) {\n            console.log(error);\n        }\n    }, [modalVisible])\n\n    return (\n        <View>\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={modalVisible}\n                onRequestClose={() => {\n                    Alert.alert(\"Modal has been closed.\");\n                }}\n            >\n                <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n\n                        <Text style={styles.modalText}>add comment</Text>\n\n                        {load ? <Loading /> : <TextInput\n                            style={styles.modalTextInput}\n                            placeholder=\"add comment.. \"\n                            autoCapitalize=\"none\"\n                            autoCorrect={false}\n                            onChangeText={(val) => setNewComment(val)}\n                            value={newComment}\n                        ></TextInput>}\n                        \n\n                        <View style={styles.modalButtonContainer}>\n                            <TouchableOpacity\n                                style={{ ...styles.modalButton, backgroundColor: \"green\" }}\n                                onPress={() => {\n                                    addComment(props.project.id);\n                                }}\n                            >\n                                <Text style={styles.textStyle}>comment</Text>\n                            </TouchableOpacity>\n\n                            <TouchableOpacity\n                                style={{ ...styles.modalButton, backgroundColor: \"red\" }}\n                                onPress={() => {\n                                    setModalVisible(!modalVisible);\n                                }}\n                            >\n                                <Text style={styles.textStyle}>cancel</Text>\n                            </TouchableOpacity>\n                        </View>\n\n\n\n                    </View>\n                </View>\n\n\n            </Modal>\n\n\n            <View style={globalStyles.projectCardHeader}>\n                <Text style={globalStyles.projectTitle}>{props.project.title}</Text>\n            </View>\n\n            <View style={globalStyles.projectCardContent}>\n                <View>\n                    {comments ? <View>\n                        \n                        {emptyComments ? <View>{listComments && listComments.map((comment, index) => {\n                            return (\n                                <View key={index}>\n                                    <Text>{comment.comment}</Text>\n                                    <Text style={globalStyles.smallText}>{comment.createdAt}</Text>\n                                </View>\n                            )\n                        })}</View>\n\n                            : <View><Text>no comments on this project</Text></View>}\n\n                    </View> : <Text>{props.project.body}</Text>}\n\n                </View>\n            </View>\n\n            <View style={globalStyles.projectIconRow}>\n\n                <View>\n\n                    <View>\n\n                        <TouchableOpacity onPress={() => setModalVisible(true)}>\n                            <MaterialCommunityIcons style={globalStyles.projectIcon} name=\"comment-plus-outline\" size={24} color=\"green\" />\n                        </TouchableOpacity>\n                        <Text style={globalStyles.projectIconText}> comment </Text>\n                    </View>\n\n                </View>\n\n                <View>\n                    <TouchableOpacity onPress={() => toggleComments(props.project.id)}>\n                        {loadComments ? <View>\n                            <MaterialCommunityIcons style={globalStyles.projectIcon} name=\"comment-processing-outline\" size={24} color=\"gray\" />\n                        </View> : <View>\n                                {comments ? <MaterialCommunityIcons style={globalStyles.projectIcon} name=\"comment-remove\" size={24} color=\"gray\" />\n                                    : <MaterialCommunityIcons style={globalStyles.projectIcon} name=\"comment-text\" size={24} color=\"green\" />\n                                }\n                            </View>}\n\n                    </TouchableOpacity>\n                    <Text style={globalStyles.projectIconText}> comments </Text>\n                </View>\n\n            </View>\n        </View>\n    )\n}\n\nexport default FlatlistPublicProjectItem\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        borderColor: 'coral',\n        borderWidth: 1,\n\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5,\n        minWidth: 250,\n\n    },\n    modalButton: {\n        backgroundColor: \"#F194FF\",\n        borderRadius: 10,\n        marginVertical: 5,\n        padding: 8,\n        minWidth: 180,\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginVertical: 16,\n        textAlign: \"center\"\n\n    },\n    modalButtonContainer: {\n        marginTop: 90,\n    },\n    modalTextInput: {\n        marginVertical: 10,\n    }\n});\n"]},"metadata":{},"sourceType":"module"}