{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/maxhaggkvist/Documents/cross platform apps/crossplatform_finalApp/mobile_layer/components/publicProjectFeed.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { globalStyles } from \"../styles/global\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport Loading from \"../components/loading\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport FlatlistPublicProjectItem from \"./flatlistPublicProjectItem\";\n\nvar PublicProjectFeed = function PublicProjectFeed(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      projectList = _useState2[0],\n      setProjectList = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      load = _useState4[0],\n      setLoad = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refresh = _useState6[0],\n      setRefresh = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empty = _useState8[0],\n      setEmpty = _useState8[1];\n\n  var _useState9 = useState(props.user),\n      _useState10 = _slicedToArray(_useState9, 2),\n      user = _useState10[0],\n      setUser = _useState10[1];\n\n  function refreshPublicProjects() {\n    var publicList, publicProject, jsonproject;\n    return _regeneratorRuntime.async(function refreshPublicProjects$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoad(true);\n            console.log(\"refreshing public project feed.. \");\n            publicList = [];\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.2:3000/public-projects\", {\n              method: \"GET\"\n            }));\n\n          case 6:\n            publicProject = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(publicProject.json());\n\n          case 9:\n            jsonproject = _context.sent;\n            jsonproject.forEach(function (projectfound) {\n              publicList.push(projectfound.project);\n            });\n            console.log(publicList);\n            console.log('got projects.. ');\n            setProjectList(publicList);\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 19:\n            setLoad(false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 16]], Promise);\n  }\n\n  useEffect(function () {\n    try {\n      refreshPublicProjects();\n      setRefresh(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [refresh]);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, load ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }) : React.createElement(FlatList, {\n    data: projectList,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: globalStyles.projectCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, React.createElement(FlatlistPublicProjectItem, {\n        project: item,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: globalStyles.projectCardFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: globalStyles.projectCreatedAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: globalStyles.smallText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, item.createdAt))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#fff\",\n    paddingTop: 20\n  },\n  boxOne: {\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderColor: \"coral\",\n    borderBottomWidth: 2\n  },\n  statusContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    padding: 10\n  },\n  statusIcons: {\n    padding: 10\n  },\n  statusText: {\n    marginRight: 10\n  },\n  dashboardContainer: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  projectCard: {\n    borderColor: \"coral\",\n    borderWidth: 2,\n    marginHorizontal: 30,\n    marginVertical: 30\n  },\n  projectCardContent: {\n    minHeight: 300,\n    paddingHorizontal: 30,\n    paddingTop: 20\n  },\n  projectCardHeader: {\n    minHeight: 20,\n    paddingTop: 16\n  },\n  projectTitle: {\n    alignSelf: \"center\",\n    fontSize: 20\n  },\n  projectCardFooter: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    paddingBottom: 16,\n    paddingHorizontal: 30,\n    flexDirection: \"row\"\n  },\n  projectCreated: {\n    color: \"#333\",\n    fontSize: 15\n  }\n});\nexport default PublicProjectFeed;","map":{"version":3,"sources":["/Users/maxhaggkvist/Documents/cross platform apps/crossplatform_finalApp/mobile_layer/components/publicProjectFeed.js"],"names":["React","useState","useEffect","globalStyles","MaterialIcons","moment","Loading","FlatList","FlatlistPublicProjectItem","PublicProjectFeed","props","projectList","setProjectList","load","setLoad","refresh","setRefresh","empty","setEmpty","user","setUser","refreshPublicProjects","console","log","publicList","fetch","method","publicProject","json","jsonproject","forEach","projectfound","push","project","error","flex","item","projectCard","projectCardFooter","projectCreatedAt","smallText","createdAt","styles","StyleSheet","create","container","flexDirection","justifyContent","backgroundColor","paddingTop","boxOne","padding","borderColor","borderBottomWidth","statusContainer","alignItems","statusIcons","statusText","marginRight","dashboardContainer","borderWidth","marginHorizontal","marginVertical","projectCardContent","minHeight","paddingHorizontal","projectCardHeader","projectTitle","alignSelf","fontSize","paddingBottom","projectCreated","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, Button, TouchableOpacity } from \"react-native\";\nimport { globalStyles } from \"../styles/global\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport Loading from '../components/loading';\nimport { FlatList } from \"react-native-gesture-handler\";\nimport FlatlistPublicProjectItem from \"./flatlistPublicProjectItem\";\n\n\nconst PublicProjectFeed = (props) => {\n\n  const [projectList, setProjectList] = useState();\n  const [load, setLoad] = useState(true);\n  const [refresh, setRefresh] = useState(true);\n  const [empty, setEmpty] = useState();\n  const [user, setUser] = useState(props.user);\n\n  async function refreshPublicProjects() {\n    setLoad(true);\n    console.log(\"refreshing public project feed.. \");\n    const publicList = [];\n    try {\n      const publicProject = await fetch(\n        \"http://192.168.0.2:3000/public-projects\",\n        {\n          method: \"GET\",\n        }\n      );\n\n      const jsonproject = await publicProject.json();\n      jsonproject.forEach((projectfound) => {\n        publicList.push(projectfound.project);\n      });\n      console.log(publicList);\n      console.log('got projects.. ');\n      setProjectList(publicList);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoad(false);\n  }\n\n  useEffect(() => {\n\n    try {\n\n      refreshPublicProjects();\n      setRefresh(false);\n    } catch (error) {\n      console.log(error);\n    }\n   \n  }, [refresh])\n\n\n  return (\n    <View style={{ flex: 1 }}>\n      {load ?   <Loading /> : \n      <FlatList \n      \n        data={projectList}\n        renderItem={({ item }) => (\n              <View style={globalStyles.projectCard}>\n                <FlatlistPublicProjectItem\n                  project={item}\n                  user={user}\n                  />\n\n                <View style={globalStyles.projectCardFooter}>\n\n                  <View style={globalStyles.projectCreatedAt}>\n                    <Text style={globalStyles.smallText}>{item.createdAt}</Text>\n                  </View>\n\n                </View>\n\n              </View>\n            )}\n      />}\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#fff\",\n    paddingTop: 20,\n  },\n  boxOne: {\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderColor: \"coral\",\n    borderBottomWidth: 2,\n  },\n  statusContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  statusIcons: {\n    padding: 10,\n  },\n  statusText: {\n    marginRight: 10,\n  },\n  dashboardContainer: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  projectCard: {\n    borderColor: \"coral\",\n    borderWidth: 2,\n    marginHorizontal: 30,\n    marginVertical: 30,\n  },\n  projectCardContent: {\n    minHeight: 300,\n    paddingHorizontal: 30,\n    paddingTop: 20,\n  },\n  projectCardHeader: {\n    minHeight: 20,\n    paddingTop: 16,\n  },\n  projectTitle: {\n    alignSelf: \"center\",\n    fontSize: 20,\n  },\n  projectCardFooter: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    paddingBottom: 16,\n    paddingHorizontal: 30,\n    flexDirection: \"row\",\n  },\n  projectCreated: {\n    color: \"#333\",\n    fontSize: 15,\n  },\n});\n\nexport default PublicProjectFeed;\n"]},"metadata":{},"sourceType":"module"}