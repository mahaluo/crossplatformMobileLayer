{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/maxhaggkvist/Documents/cross platform apps/crossplatform_finalApp/mobile_layer/components/tabcomponents/projects.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { globalStyles } from \"../../styles/global\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport Loading from \"../loading\";\nimport FlatlistProjectItem from \"../flatlistProjectItem\";\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nvar Projects = function Projects(props) {\n  console.log(\"user passed from home: \" + props.user);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      refresh = _useState2[0],\n      setRefresh = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userProjects = _useState4[0],\n      setUserProjects = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setLoad = _useState6[1];\n\n  var _useState7 = useState(props.user),\n      _useState8 = _slicedToArray(_useState7, 2),\n      user = _useState8[0],\n      setUser = _useState8[1];\n\n  var refreshProjects = function refreshProjects() {\n    console.log(\"project feed refreshing.. \");\n    setLoad(true);\n\n    function refreshFeed() {\n      var userList, usersProject, jsonproject;\n      return _regeneratorRuntime.async(function refreshFeed$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userList = [];\n              console.log(\"fetching projects for user: \" + user);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.2:3000/user-projects\", {\n                method: \"GET\",\n                headers: {\n                  user: user\n                }\n              }));\n\n            case 4:\n              usersProject = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(usersProject.json());\n\n            case 7:\n              jsonproject = _context.sent;\n              jsonproject.forEach(function (projectfound) {\n                userList.push(projectfound.project);\n              });\n              console.log('projects fetched: ' + userList);\n              setUserProjects(userList);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    try {\n      refreshFeed().then(function () {\n        setTimeout(function () {\n          setLoad(false);\n        }, 1500);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  var deleteItem = function deleteItem(id) {\n    console.log('filtering project list.. ');\n\n    var list = _toConsumableArray(userProjects);\n\n    var filteredList = list.filter(function (item) {\n      return item.id !== id;\n    });\n    console.log(filteredList);\n    setUserProjects(filteredList);\n\n    function deleteProject() {\n      return _regeneratorRuntime.async(function deleteProject$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              firebase.firestore().collection(\"projectList\").doc(\"projects\").collection(user).doc(id).delete().then(function () {\n                console.log(\"deleted project\" + id);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    deleteProject();\n  };\n\n  useEffect(function () {\n    try {\n      refreshProjects();\n      setRefresh(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [refresh]);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, load ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }) : React.createElement(FlatList, {\n    data: userProjects,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: globalStyles.projectCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, React.createElement(FlatlistProjectItem, {\n        project: item,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: globalStyles.projectCardFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: globalStyles.projectCreatedAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: globalStyles.smallText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, item.createdAt)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return deleteItem(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, React.createElement(MaterialIcons, {\n        style: globalStyles.projectIcon,\n        name: \"delete-forever\",\n        size: 30,\n        color: \"coral\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default Projects;","map":{"version":3,"sources":["/Users/maxhaggkvist/Documents/cross platform apps/crossplatform_finalApp/mobile_layer/components/tabcomponents/projects.js"],"names":["React","useState","useEffect","globalStyles","MaterialIcons","Loading","FlatlistProjectItem","firebase","Projects","props","console","log","user","refresh","setRefresh","userProjects","setUserProjects","load","setLoad","setUser","refreshProjects","refreshFeed","userList","fetch","method","headers","usersProject","json","jsonproject","forEach","projectfound","push","project","then","setTimeout","error","deleteItem","id","list","filteredList","filter","item","deleteProject","firestore","collection","doc","delete","catch","err","flex","projectCard","projectCardFooter","projectCreatedAt","smallText","createdAt","projectIcon","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  FlatList\n} from \"react-native\";\nimport { globalStyles } from \"../../styles/global\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport Loading from \"../loading\";\nimport FlatlistProjectItem from '../flatlistProjectItem';\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nconst Projects = (props) => {\n  console.log(\"user passed from home: \" + props.user);\n\n  const [refresh, setRefresh] = useState(true);\n  const [userProjects, setUserProjects] = useState();\n  const [load, setLoad] = useState(false);\n  const [user, setUser] = useState(props.user);\n\n\n  const refreshProjects = () => {\n    console.log(\"project feed refreshing.. \");\n    setLoad(true);\n\n    async function refreshFeed() {\n      const userList = [];\n      console.log(\"fetching projects for user: \" + user);\n      const usersProject = await fetch(\n        \"http://192.168.0.2:3000/user-projects\",\n        {\n          method: \"GET\",\n          headers: {\n            user: user,\n          },\n        }\n      );\n\n      const jsonproject = await usersProject.json();\n      jsonproject.forEach((projectfound) => {\n        userList.push(projectfound.project);\n      });\n      console.log('projects fetched: ' + userList);\n      setUserProjects(userList);\n    }\n\n    try {\n      refreshFeed().then(() => {\n        setTimeout(() => {\n          setLoad(false);\n        }, 1500);\n      });\n\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  const deleteItem = (id) => {\n\n    console.log('filtering project list.. ');\n\n    const list = [...userProjects];\n    const filteredList = list.filter(item => item.id !== id);\n    console.log(filteredList);\n    setUserProjects(filteredList);\n\n    async function deleteProject() {\n      firebase\n      .firestore()\n      .collection(\"projectList\")\n      .doc(\"projects\")\n      .collection(user)\n      .doc(id)\n      .delete()\n      .then(() => {\n        console.log(\"deleted project\" + id);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }\n\n    deleteProject();\n  }\n\n  useEffect(() => {\n    try {\n      refreshProjects();\n      setRefresh(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [refresh]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {load ? (\n        <Loading />\n      ) : (\n          <FlatList\n            data={userProjects}\n            renderItem={({ item }) => (\n              <View style={globalStyles.projectCard}>\n                <FlatlistProjectItem\n                  project={item}\n                  user={user} />\n\n                <View style={globalStyles.projectCardFooter}>\n\n                  <View style={globalStyles.projectCreatedAt}>\n                    <Text style={globalStyles.smallText}>{item.createdAt}</Text>\n                  </View>\n\n                  <TouchableOpacity onPress={() => deleteItem(item.id)}>\n                    <MaterialIcons\n                      style={globalStyles.projectIcon}\n                      name=\"delete-forever\"\n                      size={30}\n                      color=\"coral\"\n                    />\n                  </TouchableOpacity>\n\n                </View>\n\n              </View>\n            )}\n\n\n\n          />\n        )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n});\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}